package com.foomap.activity;

import com.foodmap.R;
import com.foomap.activity.UsrInfoActivity;
import com.foomap.model.UserInfo;
import com.foomap.model.UserInfo.UserData;

import android.R.string;
import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;
import android.widget.TextView;
import android.os.Build;
import com.foomap.util.*;

import com.foomap.service.*;
import com.foomap.service.HttpServiceHelper.IOnHttpRequeseListener;

import android.widget.TextView.OnEditorActionListener; 

public class PasswrodChangeActivity<KeyEvent> extends Activity {
	public Button  pswverifybtn,cancelbtn;
	
	String oldpsw,newpsw,pswverify;
	static String error="error: 修改密码失败: 两次输入密码不同";
	static String error2="error: 修改密码失败 旧密码不对";
	static String successed="修改成功";
	private UserData usr;
	String usrId;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.passwordchange);
		usr=UserInfo.getUserData(getApplicationContext());
		usrId=usr.userId;
		EditText oldpswET=(EditText)findViewById(R.id.oldpswET); 
		EditText newpswET=(EditText)findViewById(R.id.newpswET); 
		EditText pswverifyET=(EditText)findViewById(R.id.pswverifyET); 
		pswverifybtn = (Button) findViewById(R.id.pswverifybtn);
		pswverifybtn.setOnClickListener(listener);
		cancelbtn = (Button) findViewById(R.id.pswcancelbtn);
		cancelbtn.setOnClickListener(listener);
		
	}
		
	private OnClickListener listener = new OnClickListener() {

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			Button btn = (Button) v;
			switch (btn.getId()) {
			case R.id.pswverifybtn:
			{
			
				EditText oldpswET=(EditText)findViewById(R.id.oldpswET); 
				EditText newpswET=(EditText)findViewById(R.id.newpswET); 
				EditText pswverifyET=(EditText)findViewById(R.id.pswverifyET); 
				//Toast.makeText(PasswrodChangeActivity.this, oldpswET.getText().toString(), Toast.LENGTH_SHORT).show();   
				oldpsw=oldpswET.getText().toString();
				newpsw=newpswET.getText().toString();
				pswverify=pswverifyET.getText().toString();
				
//				if(oldpsw.equals(usr.password)){
//					Toast.makeText(PasswrodChangeActivity.this, error2, Toast.LENGTH_SHORT).show();
//					break;}
				while(!newpsw.equals(pswverify)){
					Toast.makeText(PasswrodChangeActivity.this, error, Toast.LENGTH_SHORT).show(); 
					}
				if(newpsw.equals(pswverify))
				{
					
					UserHttpService userHttpService=new UserHttpService();
					userHttpService.resetPassWord(usr.userId, oldpsw, pswverify, new IOnHttpRequeseListener() {
						
						@Override
						public void finished(String jsonRes) {
							// TODO Auto-generated method stub
							Log.i("PasswrodChangeActivity", jsonRes);
							boolean b=UserJsonUtils.isOpSucceed(jsonRes);
							if(b==true)
							{
								Intent intent = new Intent();
								 intent.setClass(PasswrodChangeActivity.this, UsrInfoActivity.class);
								 startActivity(intent);
								finish();}
						}
					});
					
					
					
				}
					
					//Toast.makeText(PasswrodChangeActivity.this, successed, Toast.LENGTH_SHORT).show(); 
			}
				
				break;
			case R.id.pswcancelbtn:
				Intent intent = new Intent();
				 intent.setClass(PasswrodChangeActivity.this, UsrInfoActivity.class);
				 startActivity(intent);
				 finish();
				break;
		
			default:
				break;
			}
		}

	};
	

}
