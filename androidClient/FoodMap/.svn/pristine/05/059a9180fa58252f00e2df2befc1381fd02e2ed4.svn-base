package com.foomap.util;

import android.graphics.Bitmap;
import android.widget.ImageView;

import com.foodmap.R;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;

public class ImageManager {

	public static DisplayImageOptions options = new DisplayImageOptions.Builder()
			.showImageOnLoading(null).showImageForEmptyUri(R.drawable.dicon)
			.showImageOnFail(R.color.Black).cacheInMemory(true)
			.cacheOnDisk(true).considerExifParams(true)
			.imageScaleType(ImageScaleType.EXACTLY_STRETCHED)
			.bitmapConfig(Bitmap.Config.RGB_565).resetViewBeforeLoading(true)
			.displayer(new FadeInBitmapDisplayer(100))
			.displayer(new RoundedBitmapDisplayer(20)).build();

	/*public static final DisplayImageOptions OPTION_LARGE = new DisplayImageOptions.Builder()
			.showImageOnLoading(null) // 设置图片在下载期间显示的图片
			.showImageForEmptyUri(R.drawable.dicon)// 设置图片Uri为空或是错误的时候显示的图片
			.showImageOnFail(R.color.Black) // 设置图片加载/解码过程中错误时候显示的图片
			.cacheInMemory(true)// 设置下载的图片是否缓存在内存中
			.cacheOnDisk(true)// 设置下载的图片是否缓存在SD卡中
			.considerExifParams(true) // 是否考虑JPEG图像EXIF参数（旋转，翻转）
			.imageScaleType(ImageScaleType.EXACTLY_STRETCHED)// 设置图片以如何的编码方式显示
			// .bitmapConfig(Bitmap.Config.RGB_565)// 设置图片的解码类型//
			.resetViewBeforeLoading(true)// 设置图片在下载前是否重置，复位
			.displayer(new FadeInBitmapDisplayer(100))// 是否图片加载好后渐入的动画时间
			.displayer(new RoundedBitmapDisplayer(20))// 是否设置为圆角，弧度为多少
			.build();*/

	public static void Load(String imgUrl, ImageView imageView,
			ImageLoadingListener ill) {
		ImageLoader.getInstance().displayImage(imgUrl, imageView, options, ill);
	}

	public static void Load(String imgUrl, ImageView imageView,
			DisplayImageOptions options) {
		ImageLoader.getInstance().displayImage(imgUrl, imageView, options);
	}
}
